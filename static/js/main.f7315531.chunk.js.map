{"version":3,"sources":["components/Header.js","components/Fetch.js","components/Searchquery.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Fetch","useState","news","setNews","isLoading","setIsLoading","useEffect","fetch","then","response","json","hits","catch","console","log","map","title","Searchquery","searchQuery","setSearchQuery","API_ROOT","onClick","loadResults","placeholder","onChange","e","target","value","type","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAiBeA,MAdf,WACE,OACE,sBAAKC,UAAU,SAAf,UACE,8BAEE,8BACE,4CADF,2DAIF,4C,aCqBSC,MA9Bf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAWA,OAVAC,qBAAU,WACRC,MAAM,mDACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACLL,GAAa,GACbF,EAAQO,EAAKC,SAEdC,OAAM,kBAAMC,QAAQC,IAAI,uBAC1B,IAGD,qBAAKf,UAAU,QAAf,SACGK,EACC,oDAEAF,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,MAAH,OACP,6BACE,6BACE,qBAAKjB,UAAU,kBAAf,SAAkCiB,c,MCoBjCC,MAzCf,WACE,MAAsChB,qBAAtC,mBAAOiB,EAAP,KAAoBC,EAApB,KAIMC,EAAW,kDAQjB,OACE,sBAAKrB,UAAU,SAAf,UACE,uBACA,2EACA,qBAAKA,UAAU,gBAAf,uFAKA,sBAAKA,UAAU,cAAf,UACE,wBACEA,UAAU,eACVsB,QAAS,kBAlBjB,SAAqBH,GACPA,EAAW,UAChBE,EADgB,mBACGF,EADH,mBAEhBE,EAFgB,aAiBFE,CAAYJ,IAF7B,oBAMA,uBACEnB,UAAU,cACVwB,YAAY,aACZC,SA9BS,SAACC,GAChBN,EAAeM,EAAEC,OAAOC,QA8BlBA,MAAOT,EACPU,KAAK,gB,MCtBAC,MATf,WACE,OACE,sBAAK9B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCS+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f7315531.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./header.css\";\n\nfunction Header() {\n  return (\n    <div className=\"Header\">\n      <div>\n        {/* <img src={/components/logo_HackerNews.png} /> */}\n        <p>\n          <b>Hacker News</b> new | past | comments | ask | show | jobs | submit\n        </p>\n      </div>\n      <div>login</div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport \"./fetch.css\";\n\nfunction Fetch() {\n  const [news, setNews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"http://hn.algolia.com/api/v1/search?query=react\")\n      .then((response) => response.json())\n      .then((json) => {\n        setIsLoading(false);\n        setNews(json.hits);\n      })\n      .catch(() => console.log(\"request failed\"));\n  }, []);\n\n  return (\n    <div className=\"Fetch\">\n      {isLoading ? (\n        <div>...is loading ...</div>\n      ) : (\n        news.map(({ title }) => (\n          <ol>\n            <li>\n              <div className=\"HackerNewstitle\">{title}</div>\n            </li>\n          </ol>\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default Fetch;\n","import React, { useState } from \"react\";\nimport \"./SearchQuery.css\";\n\nfunction Searchquery() {\n  const [searchQuery, setSearchQuery] = useState();\n  const onChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n  const API_ROOT = \"http://hn.algolia.com/api/v1/search?query=react\";\n\n  function loadResults(searchQuery) {\n    const url = searchQuery\n      ? `${API_ROOT}/search/${searchQuery}.json`\n      : `${API_ROOT}/pop.json`;\n  }\n\n  return (\n    <div className=\"Footer\">\n      <hr />\n      <div>Applications are open for YC Winter 2022</div>\n      <div className=\"Footer_Navbar\">\n        Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC |\n        Contact\n      </div>\n\n      <div className=\"SearchQuery\">\n        <button\n          className=\"Searchbutton\"\n          onClick={() => loadResults(searchQuery)}\n        >\n          Search\n        </button>\n        <input\n          className=\"SearchInput\"\n          placeholder=\"Just do it\"\n          onChange={onChange}\n          value={searchQuery}\n          type=\"text\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Searchquery;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Fetch from \"./components/Fetch\";\nimport Searchquery from \"./components/Searchquery\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Fetch />\n      <Searchquery />\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}